//
//  XYRegisterController.m
//  LYDApp
//
//  Created by dookay_73 on 16/11/1.
//  Copyright © 2016年 dookay_73. All rights reserved.
//

#import "XYRegisterController.h"
#import "XYRegisterSuccessController.h"
#import "FWXYViewController.h"

@interface XYRegisterController ()

@property (nonatomic, strong) XYMainScrollView  *mainSV;
@property (nonatomic, strong) UIImageView   *bgIV;
@property (nonatomic, strong) UIImageView   *logoIV;
@property (nonatomic, strong) UITextField   *mobileTF;
@property (nonatomic, strong) UITextField   *codeTF;
@property (nonatomic, strong) UITextField   *inviteTF;
@property (nonatomic, strong) UITextField   *passwordTF;
@property (nonatomic, strong) UIButton       *protocalLabel;
@property (nonatomic, strong) UIButton      *eyeBtn;
@property (nonatomic, strong) UIButton      *sendCodeBtn;
@property (nonatomic, strong) UIButton      *registerbtn;
@property (nonatomic, strong) UIButton       *loginLabel;

@end

@implementation XYRegisterController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = [UIColor whiteColor];
    
    [self createUI];
    
}

- (void)createUI
{
    self.mainSV = [[XYMainScrollView alloc] initWithFrame:self.view.bounds];
    self.mainSV.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.mainSV];
    
    self.bgIV = [[UIImageView alloc] initWithFrame:self.mainSV.bounds];
    self.bgIV.image = [UIImage imageNamed:@"LoginBG"];
    [self.mainSV addSubview:self.bgIV];
    
    self.logoIV = [[UIImageView alloc] initWithFrame:CGRectMake(KWidth(130), KHeight(85), KWidth(116), KHeight(75))];
    self.logoIV.image = [UIImage imageNamed:@"Logo"];
    [self.mainSV addSubview:self.logoIV];
    
    self.mobileTF = [[UITextField alloc] initWithFrame:CGRectMake(KWidth(40), self.logoIV.maxY + KHeight(41), kSCREENW - (KWidth(40) * 2), KHeight(40))];
    self.mobileTF.font = [UIFont systemFontOfSize:KHeight(16)];
    NSMutableAttributedString *mobilePH = [[NSMutableAttributedString alloc] initWithString:@"请填写注册手机号"];
    [mobilePH addAttribute:NSForegroundColorAttributeName value:TEXTBLACK range:NSMakeRange(0, mobilePH.length)];
    [mobilePH addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:KHeight(16)] range:NSMakeRange(0, mobilePH.length)];
    self.mobileTF.attributedPlaceholder = mobilePH;
    [self.mainSV addSubview:self.mobileTF];
    
    UIView *line1 = [[UIView alloc] initWithFrame:CGRectMake(self.mobileTF.x, self.mobileTF.maxY - 1, self.mobileTF.width, 1)];
    line1.backgroundColor = [UIColor colorWithRed:0.78 green:0.74 blue:0.71 alpha:1.00];
    [self.mainSV addSubview:line1];
    
    self.codeTF = [[UITextField alloc] initWithFrame:CGRectMake(self.mobileTF.x, self.mobileTF.maxY + KHeight(10), self.mobileTF.width, self.mobileTF.height)];
    self.codeTF.font = [UIFont systemFontOfSize:KHeight(16)];
    NSMutableAttributedString *codePH = [[NSMutableAttributedString alloc] initWithString:@"请输入收到的验证码"];
    [codePH addAttribute:NSForegroundColorAttributeName value:TEXTBLACK range:NSMakeRange(0, codePH.length)];
    [codePH addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:KHeight(16)] range:NSMakeRange(0, codePH.length)];
    self.codeTF.attributedPlaceholder = codePH;
    [self.mainSV addSubview:self.codeTF];
    
    UIView *line2 = [[UIView alloc] initWithFrame:CGRectMake(self.codeTF.x, self.codeTF.maxY - 1, self.codeTF.width, 1)];
    line2.backgroundColor = [UIColor colorWithRed:0.78 green:0.74 blue:0.71 alpha:1.00];
    [self.mainSV addSubview:line2];
    
    self.sendCodeBtn = [[UIButton alloc] initWithFrame:CGRectMake(self.mobileTF.maxX - KWidth(90), line1.maxY + KHeight(11), KWidth(90), KHeight(30))];
    [self.sendCodeBtn setTitle:@"发送验证码" forState:UIControlStateNormal];
//    [self.sendCodeBtn setBackgroundColor:[UIColor colorWithRed:0.76 green:0.71 blue:0.69 alpha:1.00]];
    [self.sendCodeBtn setBackgroundColor:ORANGECOLOR];
    [self.sendCodeBtn addTarget:self action:@selector(sendCodeBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
    self.sendCodeBtn.titleLabel.font = [UIFont systemFontOfSize:KHeight(15.0f)];
    self.sendCodeBtn.layer.cornerRadius = 2.0f;
    self.sendCodeBtn.layer.masksToBounds = YES;
    [self.mainSV addSubview:self.sendCodeBtn];
    
    
    self.inviteTF = [[UITextField alloc] initWithFrame:CGRectMake(self.codeTF.x, self.codeTF.maxY + KHeight(10), self.codeTF.width, self.codeTF.height)];
    self.inviteTF.font = [UIFont systemFontOfSize:KHeight(16)];
    NSMutableAttributedString *invitePH = [[NSMutableAttributedString alloc] initWithString:@"邀请码（非必填）"];
    [invitePH addAttribute:NSForegroundColorAttributeName value:TEXTBLACK range:NSMakeRange(0, invitePH.length)];
    [invitePH addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:KHeight(16)] range:NSMakeRange(0, invitePH.length)];
    self.inviteTF.attributedPlaceholder = invitePH;
    [self.mainSV addSubview:self.inviteTF];
    
    UIView *line3 = [[UIView alloc] initWithFrame:CGRectMake(self.inviteTF.x, self.inviteTF.maxY - 1, self.inviteTF.width, 1)];
    line3.backgroundColor = [UIColor colorWithRed:0.78 green:0.74 blue:0.71 alpha:1.00];
    [self.mainSV addSubview:line3];
    
    self.passwordTF = [[UITextField alloc] initWithFrame:CGRectMake(self.inviteTF.x, self.inviteTF.maxY + KHeight(10), self.inviteTF.width, self.inviteTF.height)];
    self.passwordTF.font = [UIFont systemFontOfSize:KHeight(16)];
    NSMutableAttributedString *pswdPH = [[NSMutableAttributedString alloc] initWithString:@"请输入密码（6-20位字母+数字组合）"];
    [pswdPH addAttribute:NSForegroundColorAttributeName value:TEXTBLACK range:NSMakeRange(0, pswdPH.length)];
    [pswdPH addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:KHeight(16)] range:NSMakeRange(0, pswdPH.length)];
    self.passwordTF.attributedPlaceholder = pswdPH;
    self.passwordTF.secureTextEntry = YES;
    [self.mainSV addSubview:self.passwordTF];
    
    UIView *line4 = [[UIView alloc] initWithFrame:CGRectMake(self.passwordTF.x, self.passwordTF.maxY - 1, self.passwordTF.width, 1)];
    line4.backgroundColor = [UIColor colorWithRed:0.78 green:0.74 blue:0.71 alpha:1.00];
    [self.mainSV addSubview:line4];
    
    self.eyeBtn = [[UIButton alloc] initWithFrame:CGRectMake(self.passwordTF.maxX - KWidth(23), self.passwordTF.y + (self.passwordTF.height - KHeight(18)) / 2, KWidth(23), KHeight(18))];
    [self.eyeBtn setBackgroundImage:[UIImage imageNamed:@"closeEye"] forState:UIControlStateNormal];
    [self.eyeBtn setBackgroundImage:[UIImage imageNamed:@"openEye"] forState:UIControlStateSelected];
    [self.eyeBtn addTarget:self action:@selector(eyeBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
    [self.mainSV addSubview:self.eyeBtn];
    
    
    NSMutableAttributedString *protocalStr = [[NSMutableAttributedString alloc] initWithString:@"注册即代表同意《零用贷服务协议》"];
    [protocalStr addAttribute:NSUnderlineStyleAttributeName value:[NSNumber numberWithInteger:NSUnderlineStyleSingle] range:NSMakeRange(7, 9)];
    [protocalStr addAttribute:NSForegroundColorAttributeName value:TEXTGARY range:NSMakeRange(0, protocalStr.length)];
    CGFloat protocalLableW = [Helper widthOfString:@"注册即代表同意《零用贷服务协议》" font:[UIFont systemFontOfSize:KWidth(13)] height:KHeight(13)];
    self.protocalLabel = [[UIButton alloc] initWithFrame:CGRectMake((kSCREENW - protocalLableW) / 2, line4.maxY + KHeight(18), protocalLableW, KHeight(13))];
    [self.protocalLabel setTitleColor:TEXTGARY forState:UIControlStateNormal];
    self.protocalLabel.titleLabel.font = [UIFont systemFontOfSize:KHeight(13)];
    [self.protocalLabel setAttributedTitle:protocalStr forState:UIControlStateNormal];
    [self.protocalLabel addTarget:self action:@selector(protocalClicked:) forControlEvents:UIControlEventTouchUpInside];
    [self.mainSV addSubview:self.protocalLabel];
    
    self.registerbtn = [[UIButton alloc] initWithFrame:CGRectMake(self.passwordTF.x, self.protocalLabel.maxY + KHeight(22), self.passwordTF.width, KHeight(44))];
    [self.registerbtn setBackgroundColor:ORANGECOLOR];
    [self.registerbtn setTitle:@"立即注册" forState:UIControlStateNormal];
    [self.registerbtn addTarget:self action:@selector(registerbtnClicked:) forControlEvents:UIControlEventTouchUpInside];
    self.registerbtn.layer.cornerRadius = 2.0f;
    self.registerbtn.layer.masksToBounds = YES;
    [self.mainSV addSubview:self.registerbtn];
    
    NSMutableAttributedString *loginStr = [[NSMutableAttributedString alloc] initWithString:@"已有账号，直接登录"];
    [loginStr addAttribute:NSForegroundColorAttributeName value:ORANGECOLOR range:NSMakeRange(7, 2)];
    [loginStr addAttribute:NSForegroundColorAttributeName value:TEXTGARY range:NSMakeRange(0, 7)];
    CGFloat loginLabelW = [Helper widthOfString:@"已有账号，直接登录" font:[UIFont systemFontOfSize:KWidth(17)] height:KHeight(17)];
    self.loginLabel = [[UIButton alloc] initWithFrame:CGRectMake((kSCREENW - loginLabelW) / 2, self.registerbtn.maxY + KHeight(16), loginLabelW, KHeight(17))];
    [self.loginLabel setTitleColor:TEXTGARY forState:UIControlStateNormal];
    self.loginLabel.titleLabel.font = [UIFont systemFontOfSize:KHeight(17)];
    [self.loginLabel setAttributedTitle:loginStr forState:UIControlStateNormal];
    [self.loginLabel addTarget:self action:@selector(loginClicked:) forControlEvents:UIControlEventTouchUpInside];
    [self.mainSV addSubview:self.loginLabel];
    
    self.mainSV.contentSize = CGSizeMake(0, self.loginLabel.maxY + 10);
}

#pragma mark - 按钮方法

- (void)sendCodeBtnClicked:(UIButton *)button
{
    if (self.mobileTF.text.length == 0) {
        UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:@"注意" message:@"请输入手机号" preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction *alertAC = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleCancel handler:nil];
        [alertVC addAction:alertAC];
        [self presentViewController:alertVC animated:YES completion:nil];
    } else if (![Helper justMobile:self.mobileTF.text]) {
        UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:@"注意" message:@"请输入正确的手机号" preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction *alertAC = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleCancel handler:nil];
        [alertVC addAction:alertAC];
        [self presentViewController:alertVC animated:YES completion:nil];
    } else {
        __block int timeout=60; //倒计时时间
        dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
        dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
        dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
        dispatch_source_set_event_handler(_timer, ^{
            if(timeout<=0){ //倒计时结束，关闭
                dispatch_source_cancel(_timer);
                dispatch_async(dispatch_get_main_queue(), ^{
                    //设置界面的按钮显示 根据自己需求设置
                    [self.sendCodeBtn setTitle:@"发送验证码" forState:UIControlStateNormal];
                    self.sendCodeBtn.userInteractionEnabled = YES;
                    self.sendCodeBtn.backgroundColor=[UIColor orangeColor];
                });
            }else{
                int seconds = timeout % 120;
                NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
                dispatch_async(dispatch_get_main_queue(), ^{
                    //设置界面的按钮显示 根据自己需求设置
                    //NSLog(@"____%@",strTime);
                    [UIView beginAnimations:nil context:nil];
                    [UIView setAnimationDuration:1];
                    [self.sendCodeBtn setTitle:[NSString stringWithFormat:@"%@s",strTime] forState:UIControlStateNormal];
                    self.sendCodeBtn.titleLabel.adjustsFontSizeToFitWidth = NO;
                    [UIView commitAnimations];
                    self.sendCodeBtn.userInteractionEnabled = NO;
                });
                timeout--;
            }
        });
//        dispatch_resume(_timer);
        
        NSString *timestamp = [LYDTool createTimeStamp];
        NSDictionary *secretDict = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"mobile":self.mobileTF.text};
        
        NSString *sign = [LYDTool createMD5SignWithDictionary:secretDict];
        NSDictionary *para = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"mobile":self.mobileTF.text,@"sign":sign};
        
        [MBProgressHUD showMessage:@"正在发送验证码" toView:self.view];
        [LYDTool sendGetWithUrl:[NSString stringWithFormat:@"%@/common/sendVerifyCode",APIPREFIX] parameters:para success:^(id data) {
            [MBProgressHUD hideHUDForView:self.view];
            
            id backData = LYDJSONSerialization(data);
            NSLog(@"%@",backData);
            
            if ([[backData valueForKey:@"success"] boolValue] == YES) {
                dispatch_resume(_timer);
                [self.sendCodeBtn setBackgroundColor:[UIColor colorWithRed:0.76 green:0.71 blue:0.69 alpha:1.00]];
                self.sendCodeBtn.userInteractionEnabled=NO;
                
            } else {
                [MBProgressHUD showError:[backData valueForKey:@"message"]];
            }
            
        } fail:^(NSError *error, AFHTTPRequestOperation *operation) {
            [MBProgressHUD hideHUDForView:self.view];
            
            id response = LYDJSONSerialization(operation.responseObject);
            NSLog(@"%@",response);
            XYErrorHud *errorHud = [[XYErrorHud alloc] initWithTitle:@"网络错误" andDoneBtnTitle:nil andDoneBtnHidden:YES];
            [self.view.window addSubview:errorHud];
            
//            dispatch_source_cancel(_timer);
//            dispatch_async(dispatch_get_main_queue(), ^{
//                //设置界面的按钮显示 根据自己需求设置
//                [self.sendCodeBtn setTitle:@"发送验证码" forState:UIControlStateNormal];
//                self.sendCodeBtn.userInteractionEnabled = YES;
//            });
        }];

    }
    
    
}

- (void)eyeBtnClicked:(UIButton *)button
{
     button.selected = !button.selected;
    
    self.passwordTF.secureTextEntry = !self.passwordTF.secureTextEntry;
}

- (void)registerbtnClicked:(UIButton *)button
{
    self.mobileTF.text = [self.mobileTF.text stringDeleteBlank];
    self.passwordTF.text = [self.passwordTF.text stringDeleteBlank];
    
    if (self.mobileTF.text.length == 0) {
        [self alertWithMessage:@"请输入手机号"];
        return;
    } else if (![Helper justMobile:self.mobileTF.text]) {
        [self alertWithMessage:@"请输入正确的手机号"];
        return;
    } else if (self.codeTF.text.length == 0) {
        [self alertWithMessage:@"请输入验证码"];
        return;
    } else if (![self checkCode]) {
        [self alertWithMessage:@"请输入6位正确的验证码"];
        return;
    } else if (self.passwordTF.text.length == 0) {
        [self alertWithMessage:@"请输入密码"];
        return;
    } else if (self.passwordTF.text.length < 6 || self.passwordTF.text.length >= 16) {
        [self alertWithMessage:@"请输入6-16位密码"];
        return;
    } else if (![self checkPassword]) {
        [self alertWithMessage:@"请输入包含数字和字母的6-16位密码"];
        return;
    } else {
        NSString *tt=[[NSUserDefaults standardUserDefaults] stringForKey:@"strDeviceToken"];
        
        
        if (tt.length == 0)
        {
            tt=@"";
        }
        NSString *timestamp = [LYDTool createTimeStamp];
        NSDictionary *secretDict = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"mobile":self.mobileTF.text,@"verifyCode":self.codeTF.text,@"inviteCode":self.inviteTF.text,@"password":self.passwordTF.text,@"deviceToken":tt};
        
        NSString *sign = [LYDTool createMD5SignWithDictionary:secretDict];
        NSDictionary *para = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"mobile":self.mobileTF.text,@"verifyCode":self.codeTF.text,@"inviteCode":self.inviteTF.text,@"password":self.passwordTF.text,@"deviceToken":tt,@"sign":sign};
        
        NSString *url = [NSString stringWithFormat:@"%@/passport/register",APIPREFIX];
        if ([self.comeFrom isEqualToString:@"weixin"]) {
            url = [NSString stringWithFormat:@"%@/passport/weixinLoginReg", APIPREFIX];
            para = [self getParameterWithOpenId:self.resp.openid unionId:self.resp.uid];
        }
        [MBProgressHUD showMessage:@"正在注册" toView:self.view];
        [LYDTool sendPostWithUrl:url parameters:para success:^(id data) {
            [MBProgressHUD hideHUDForView:self.view];
            
            id backData = LYDJSONSerialization(data);
            NSLog(@"%@",backData);
            
            if ([[backData valueForKey:@"code"] integerValue] == 200) {
                UserDefaultsWriteObj([backData valueForKey:@"token"], @"access-token");
                UserDefaultsWriteObj([backData valueForKey:@"userId"], @"userId");
                
                [[DSYUser sharedDSYUser] setValuesForKeysWithDictionary:backData[@"user"]];
                [[DSYUser sharedDSYUser] saveUserUserToSanbox];
                UserDefaultsSynchronize;
                
                XYRegisterSuccessController *successVC = [[XYRegisterSuccessController alloc] init];
                successVC.code = backData[@"inviteCode"];
                [self.navigationController pushViewController:successVC animated:YES];
            } else {
                XYErrorHud *errorHud = [[XYErrorHud alloc] initWithTitle:[backData valueForKey:@"message"] andDoneBtnTitle:nil andDoneBtnHidden:YES];
                [self.view.window addSubview:errorHud];
            }
            
        } fail:^(NSError *error, AFHTTPRequestOperation *operation) {
            NSLog(@"%@-----%ld", operation.responseString, operation.response.statusCode);
            [MBProgressHUD hideHUDForView:self.view];
            
            id response = LYDJSONSerialization(operation.responseObject);
            NSLog(@"%@",response);
            XYErrorHud *errorHud = [[XYErrorHud alloc] initWithTitle:@"网络错误" andDoneBtnTitle:nil andDoneBtnHidden:YES];
            [self.view.window addSubview:errorHud];
        }];
    }
}


- (void)protocalClicked:(UIButton *)button
{
    FWXYViewController *vc=[[FWXYViewController alloc] init];
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)loginClicked:(UIButton *)button
{
    if([self.fromSource isEqualToString:@"login"])
    {
        [self.navigationController popViewControllerAnimated:YES];
    }else
    {
        XYLoginController *login=[[XYLoginController alloc]init];
        login.fromSource=@"register";
        [self.navigationController pushViewController:login animated:YES];
    }
}

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

#pragma mark - 判断输入的是否只有数字和字母
- (BOOL)checkPassword {
    NSString *mystring = self.passwordTF.text;
    NSString *regex = @"^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$";
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", regex];
    return [predicate evaluateWithObject:mystring];
}

- (BOOL)checkCode {
    NSString *mystring = self.codeTF.text;
    NSString *regext = @"^\\d{6}$";
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", regext];
    return [predicate evaluateWithObject:mystring];
}

- (void)alertWithMessage:(NSString *)message {
    UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:@"注意" message:message preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *alertAC = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleCancel handler:nil];
    [alertVC addAction:alertAC];
    [self presentViewController:alertVC animated:YES completion:nil];
}

#pragma mark  三方登录的参数
- (NSDictionary *)getParameterWithOpenId:(NSString *)openId unionId:(NSString *)unionId  {
    NSString *timestamp = [LYDTool createTimeStamp];
    NSDictionary *secretDict = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"openId":openId, @"unionId":unionId,
                                 @"mobile":self.mobileTF.text,@"verifyCode":self.codeTF.text,@"inviteCode":self.inviteTF.text,@"password":self.passwordTF.text};
    
    NSString *sign = [LYDTool createMD5SignWithDictionary:secretDict];
    NSDictionary *para = @{@"appKey":APPKEY,@"timestamp":timestamp,@"deviceId":DEVICEID,@"openId":openId, @"unionId":unionId,
                           @"mobile":self.mobileTF.text, @"verifyCode":self.codeTF.text, @"inviteCode":self.inviteTF.text, @"password":self.passwordTF.text, @"sign":sign};
    return para;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
